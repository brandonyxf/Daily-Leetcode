class Solution {
public:
    bool makesquare(vector<int>& mat) {
        int n = mat.size();
        int sum = accumulate(mat.begin(), mat.end(), 0);
        if (sum%4 != 0) return false;
        sort(mat.begin(), mat.end(), [](const int &l, const int &r){return l > r;});
        int ave = sum/4;
        if (mat[0] > ave) return false;
        
        int len[4] = {0};
        return match(mat, 0, len, ave);
        
    }
private:
    bool match(vector<int>& mat, int ind, int len[], int ave) {
        if (ind == mat.size()) return len[0] == ave && len[1] == ave && len[2] == ave && len[3] == ave;
        
        for (int i = 0; i < 4; i++) {
            if (len[i] + mat[ind] > ave) continue;            
            int j = 4;
            while (--j > i) {
                if (len[j] == len[i]) break;
            }
            if (j != i) continue;
            
            len[i] += mat[ind];
            if (match(mat, ind+1, len, ave)) return true;
            len[i] -= mat[ind];
        }
        
        return false;
    }
};
