/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int dist = 0;

    int findDistance(TreeNode* root, int p, int q) {
        bool p_found = false;
        bool q_found = false;
        dfs(root, p, q, p_found, q_found);
        return dist;

    }
    int dfs(TreeNode* root, int p, int q, bool& p_found, bool& q_found){
        if (!root){
            return 0;
        }
        int mid = 0;
        if (root->val == p){
            p_found = true;
            mid = 1;
        }
        if(root->val == q){
            q_found = true;
            mid = 1;
        }
        int left = dfs(root->left, p, q, p_found, q_found);
        int right = dfs(root->right, p, q, p_found, q_found);
        
        if (left > 0 && right > 0){
            dist = left + right;
            return 0;
        }
        if (left > 0 && mid > 0){
            dist = left;
            return 0;
        }
        if (right > 0 && mid > 0){
            dist = right;
            return 0;
        }
        if (mid > 0){
            return  1;
        }
        if (left > 0){
            return left + 1;
        }
        if (right > 0){
            return right + 1;
        }
        return 0;
    }
};
