class MyHashMap {
public:
    /** Initialize your data structure here. */
    vector<int> m;
    MyHashMap(): m(1000001, -1) {
        
    }
    
    /** value will always be non-negative. */
    void put(int key, int value) {
        m[key] = value;
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    int get(int key) {
        return m[key];
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    void remove(int key) {
        m[key] = -1;
    }
};

// class MyHashMap {
// public:
    
//     bool checkArr[1000001];
//     int  hashMap[1000001];
    
//     /** Initialize your data structure here. */
//     MyHashMap() {
//         memset(checkArr, 0, sizeof(bool) * 1000001);
//     }
    
//     /** value will always be non-negative. */
//     void put(int key, int value) {
//         checkArr[key] = true;
//         hashMap[key] = value;
//     }
    
//     /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
//     int get(int key) {
//         return checkArr[key] ? hashMap[key] : -1;
//     }
    
//     /** Removes the mapping of the specified value key if this map contains a mapping for the key */
//     void remove(int key) {
//         checkArr[key] = false;
//     }
// };

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap* obj = new MyHashMap();
 * obj->put(key,value);
 * int param_2 = obj->get(key);
 * obj->remove(key);
 */
