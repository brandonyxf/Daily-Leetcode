class Solution {
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        if (m*k > bloomDay.size()) return -1;
        
        int l = *min_element(bloomDay.begin(), bloomDay.end()), r = *max_element(bloomDay.begin(), bloomDay.end());
        while(l < r){
            int mid = l + (r - l)/2;
            if (possible(bloomDay, m, k, mid)){
                r = mid;
            } else {
                l = mid + 1;
            }
        }
        return l;
    }
    
    bool possible(vector<int> bloomDay, int m, int k, int day){
        int bouq = 0, cnt = 0;
        for (int b: bloomDay){
            if (day >= b){
                cnt++;
                if (cnt == k){
                    bouq++;
                    cnt = 0;
                }
            } else {
                cnt = 0;
            } 
        }
        if (bouq >= m){
            return true;
        } else {
            return false;
        }
    }
};
