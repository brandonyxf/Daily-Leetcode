class Solution {
public:
    vector<int> diffWaysToCompute(string ex) {
        int n = ex.length();
        return dc(ex, 0, n);
    }
    
    vector<int> dc(string& ex, int ini, int end){
        
        vector<int> v;
        
        for (int i = ini; i < end; i++){
            if (ex[i] == '+'){
                vector<int> v1 = dc(ex, ini, i);
                vector<int> v2 = dc(ex, i+1, end);
                for (int j = 0; j < v1.size(); j++){
                    for (int k = 0; k < v2.size(); k++){
                        v.push_back(v1[j] + v2[k]);
                    }
                }
            }
            
            if (ex[i] == '-'){
                vector<int> v1 = dc(ex, ini, i);
                vector<int> v2 = dc(ex, i+1, end);
                for (int j = 0; j < v1.size(); j++){
                    for (int k = 0; k < v2.size(); k++){
                        v.push_back(v1[j] - v2[k]);
                    }
                }
            }
            
            if (ex[i] == '*'){
                vector<int> v1 = dc(ex, ini, i);
                vector<int> v2 = dc(ex, i+1, end);
                for (int j = 0; j < v1.size(); j++){
                    for (int k = 0; k < v2.size(); k++){
                        v.push_back(v1[j] * v2[k]);
                    }
                }
            }
        }
        if (v.empty()){
            return {stoi(ex.substr(ini, end))};
        }
        return v;
    }
    
};
