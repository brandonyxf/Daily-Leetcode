/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        
        auto compare = [](ListNode* l1, ListNode* l2){
            return l1->val > l2->val;
        };
        
        
        priority_queue<ListNode*, vector<ListNode*>, decltype(compare)> pq(compare);
        for (auto k: lists) {
            if (k != NULL)
                pq.push(k);
        }
        ListNode* head = new ListNode();
        ListNode* h = head;
        while (!pq.empty()) {
            ListNode* cur = pq.top();
            h->next = cur;
            pq.pop();
            if (cur->next != NULL)
                pq.push(cur->next);
            h = h->next;
        }
        
        return head->next;
        
    }
};
