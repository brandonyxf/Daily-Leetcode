class Solution {
public:
    int findTheLongestSubstring(string s) {
        // string vowels("aeiou");
        int res = 0, cur = 0;
        // unordered_map<int, int> m{{0, -1}};
        int m[32];
        for (int i = 0; i < 32; i++) m[i] = -2;
        m[0] = -1;
        
        
        for (int i = 0; i < s.length(); i++) {
            // cur ^= 1 << (vowels.find(s[i]) + 1) >> 1;
            if (s[i] == 'a') {
                cur ^= 1;
            } else if (s[i] == 'e') {
                cur ^= 2;
            } else if (s[i] == 'i') {
                cur ^= 4;
            } else if (s[i] == 'o') {
                cur ^= 8;
            } else if (s[i] == 'u') {
                cur ^= 16;
            }
            if (m[cur] == -2) m[cur] = i;
            res = max(res, i - m[cur]);
        }
        return res;
    }
};
