class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int allSum = accumulate(nums.begin(), nums.end(), target);
        if (allSum%2 != 0) return 0;
        int half = allSum/2, n = nums.size();

        vector<int> dp(half+1, 0);
        dp[0] = 1;
        
        
        for (int i = 1; i <= n; i++) {
            // dp[i][0] = 1;
            for (int j = half; j >= 0; j--) {
                if (j >= nums[i-1]) {
                    dp[j] += dp[j-nums[i-1]];
                }
            }
        }
        return dp[half];
    }
};
