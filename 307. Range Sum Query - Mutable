class NumArray {
public:
    NumArray(vector<int>& nums) {
        if (nums.size() > 0){
            n = nums.size();
            v = vector<int>(n*2);
            for (int i = n, j = 0; i < 2 * n; i++, j++){
                v[i] = nums[j];
            }
            for (int i = n - 1; i >= 0; i--){
                v[i] = v[i*2] + v[i*2 + 1];
            }
        }
    }
    
    void update(int index, int val) {
        index += n;
        v[index] = val;
        while (index > 0){
            int left, right;
            if (index % 2 == 0){
                right = index + 1;
                left = index;
            } else {
                left = index - 1;
                right = index;
            }
            v[index/2] = v[left] + v[right];
            index /= 2;
        }
    }
    
    int sumRange(int l, int r) {
        l += n;
        r += n;
        int sum = 0;
        while (l <= r){
            if (l%2 == 1){
                sum += v[l];
                l++;
            }
            if (r%2 == 0){
                sum += v[r];
                r--;
            }
            l /= 2;
            r /= 2;
        }
        return sum;
    }
private:
    vector<int> v;
    int n;
};

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray* obj = new NumArray(nums);
 * obj->update(index,val);
 * int param_2 = obj->sumRange(left,right);
 */
