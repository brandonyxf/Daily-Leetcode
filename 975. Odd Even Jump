class Solution {
public:
    int oddEvenJumps(vector<int>& arr) {
        int n = arr.size(), cnt = 1;
        map<int, int> m;
        vector<bool> higher(n), lower(n);
        m[arr[n-1]] = n - 1;
        higher[n-1] = lower[n-1] = 1;
        
        for (int i = n - 2; i >= 0; i--){
            auto hi = m.lower_bound(arr[i]), lo = m.upper_bound(arr[i]);
            if (hi != m.end()) higher[i] = lower[hi->second];
            if (lo != m.begin()) lower[i] = higher[(--lo)->second];
            if (higher[i]) cnt++;
            m[arr[i]] = i;
        }
        return cnt;
    }
};
