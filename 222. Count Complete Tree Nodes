/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        if (root == NULL) return 0;
        TreeNode* hleft = root->left;
        
        int height = 0;
        while(hleft != NULL){
            hleft = hleft->left;
            height++;
        }
        return count(root, height);
    }
    
    int count(TreeNode* root, int height){
        if (!root) return 0;
        TreeNode* r = root->right;
        int hr = 0;
        while (r != NULL){
            r = r->left;
            hr++;
        }
        if (hr == height){
            return (1<<height) + count(root->right, height-1);
        } else {
            return (1<<height-1) + count(root->left, height-1);
        }
        
    }
};
