class Solution {
public:
    vector<vector<int>> findRLEArray(vector<vector<int>>& en1, vector<vector<int>>& en2) {
        vector<vector<int>> res;
        int p1 = 0, p2 = 0, cur;
        while (p1 < en1.size() && p2 < en2.size()) {
            cur = en1[p1][0]*en2[p2][0];
            if (en1[p1][1] < en2[p2][1]) {
                if (!res.empty() && cur == res.back()[0]) {
                    res.back()[1] += en1[p1][1];
                } else {
                    res.push_back({cur, en1[p1][1]});
                }
                en2[p2][1] -= en1[p1][1];
                p1++;
            } else if (en1[p1][1] > en2[p2][1]) {
                if (!res.empty() && cur == res.back()[0]) {
                    res.back()[1] += en2[p2][1];
                } else {
                    res.push_back({cur, en2[p2][1]});
                }
                en1[p1][1] -= en2[p2][1];
                p2++;
            } else {
                if (!res.empty() && cur == res.back()[0]) {
                    res.back()[1] += en2[p2][1];
                } else {
                    res.push_back({cur, en2[p2][1]});
                }
                p1++;
                p2++;
            }
        }
        return res;
    }
};
